install.packages("swirl")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
tbl_df()
tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <-group_by(package)
by_package <-group_by(cran,package)
by_package
summarize(by_package)
?summarize
summarize(by_package,mean(size))
count=n()
submit()
submit()
tbl,pack_sum
tbl
pack_sum
quantile(pack_sum$count,probs=0.99)
?filter
?filter()
?filter()
?filter
top_counts <- filter(packsum,count > 679)
top_counts <- filter(pack_sum,count > 679)
top_counts
head(top_counts,20)
arrange(top_counts)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum,  unique>465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count, -grade)
students2
res <- gather(students2,sex_class,value)
res <- gather(students2,sex_class,count, -grade)
res
?seperate()
?separate()
?separate
separate(res,sex_class, into=c("sex", "class"))
submit()
submit()
students3
submit()
?spread()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
submit()
studnets4
students4
submit()
submit()
head(students4)
submit()
submit()
submit()
passed
failed
passed
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
rbind_list(passed,failed)
sat
submit()
submit()
submit()
type Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <-now()
this_moment
hout(this_moment)
hour(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
myd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8, minutes=34,seconds=55)
this_moment
update(this_moment,hours=10, minutes=14,seconds=55)
update(this_moment,hours=10, minutes=16,seconds=0)
this_moment<-update(this_moment,hours=10, minutes=16,seconds=0)
this_moment
now(0)
now()
nyc<-now("America/New_York")
nyc
depart<- nyc+ days(2)
depart
depart<-update(depart,hours=10, minutes=17,seconds=34)
depart<-update(depart,hours=17, minutes=34)
depart
arrive<- nyc +hours(15) +min(50)
arrive<- nyc +hours(15) +minutes(50)
arrive<- depart +hours(15) +minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time<-
c
last_time<- mdy("June 17,2008", tz="Singapore")
last_time<- mdy("June 17,2008", tz="Singapore")
last_time<- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval()
?new_interval
how_long<-(last_time,arrive)
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
16/52
12/52
2/51
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
install.packages("ggplot2")
library("ggplot2")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + stats_smooth("loess")
swirl()
library(swirl)
swirl()
.5*.8*1.6
1-.64
.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
.001* .997
.001*.985
(1-.001)* (1-.997)
(1-.997)*(1-.001)
(1-.001)* (1-.985)
.014985/.985
(.997*.001)/(.997*.001 + .014985)
X/n
1
(1+2+3+4+5+6)/6
expert_dice
expert_dice()
?expert_dice()
?expert_dice
expert_dice
expect_dice
dice_high
expect_dice(dice_high)
quit
exit
quit()
info()
bye()
p <- c(.1, .2, .3, .4)
x <- 2 : 5
?variance
?var
var(p,x)
swirl()
library(swirl)
swirl()
1+2+3+4+5+6
21/6
expert_dice
expect_die
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
edh+edl/2
.5(edh+edl)
.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean
mean(spop)
allsam
apply(allsam,mean)
apply(allsam,FUN=mean)
?apply
apply(allsam,MARGIN,FUN=mean)
apply(allsam,MARGIN=1,FUN=mean)
mean(smeans)
dice_sqr
info()
bye()
library(swirl)
swirl()
info()
main()
dice_sqr
ex2_fair -> sum(dice_sqr*dice_fair)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair- sqr(ex2_fair)
ex2_fair- square(ex2_fair)
ex2_fair- ex2_fair*ex2_fair
ex2_fair-3.5^2
sum(edh)-3.5^2
sum(dice_high * dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
.24
choose(5,3)*(.8)^x*(.2)(5-3)
choose(5,3)*(.8)^3*(.2)(5-3)
?choose
choose(5,3)*(.8)^3*(.2)(2)
choose(5,3)
10*8^3*.2*3
3072 +choose(5,4)*.8^4*.2
skip()
?pbinom
pbinom(2,5,.8,lower.tail=FALSE)
?qnorm
qnorm(10,mean=0,sd-1 lower.tail=TRUE,log.p=FALSE)
qnorm(10,mean=0,sd=1 lower.tail=TRUE,log.p=FALSE)
qnorm(.10,mean=0,sd=1, lower.tail=TRUE,log.p=FALSE)
0
qnorm(.975,mean=3,sd=2, lower.tail=TRUE,log.p=FALSE)
3+.975*1.96
1.96*2+3
?pnorm
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE,log.p=FALSE)
pnorm(1200,mean=0,sd=1,lower.tail=FALSE,log.p=FALSE)
pnorm(180/50,lower.tail=FALSE,log.p=FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75,mean=1020,sd=50, lower.tail=TRUE,log.p=FALSE)
.75
pnorm(qnorm(.53))
qnorm(pnorm(.53))
?ppois
ppois(3,2.5*4,lower.tail=TRUE,log.p=FALSE)
?pbinom
pbinom(5, 1000, .01, lower.tail = TRUE, log.p = FALSE)
ppois(5,n*p,lower.tail=TRUE,log.p=FALSE)
?lambda
?ppois
ppois(5,lambda=1000,lower.tail=TRUE,log.p=FALSE)
ppois(5,1000*.01)
?coinPlot
?coinPlot()
coinPlot(10)
coinPLot(10000)
coinPlot(1000)
coinPlot(10000)
?qnorm
qnorm(.95, lower.tail = TRUE, log.p = FALSE)
skip()
info()
bye()
?qnorm
?rnorm
qnorm(.95,mean=100,sd=10,lower.tail = TRUE, log.p = FALSE )
qnorm(.05,mean=100,sd=10,lower.tail = TRUE, log.p = FALSE )
qnorm(.05,mean=100,sd=.2,lower.tail = TRUE, log.p = FALSE )
?choose
choose(5,6)
choose(6,5)
(1+2+3+4+5+6)/6
?poission
?poisson
?ppois
?pnorm
pnorm( 70, mean=80, sd =10, lower.tail = TRUE, log.p = FALSE)
qnorm(.95,mean=1100,sd=75)
qnorm(.95,mean=100,sd=75)
?pbinom
pbinom(4, size=5, .5, lower.tail = TRUE, log.p = FALSE)
pbinom(4, size=5, .5, lower.tail = FALSE, log.p = FALSE)
pbinom(4, size=5, prob=0.5, lower.tail = FALSE)
pbinom(3, size=5, prob=0.5, lower.tail = FALSE)
?ppois
ppois(10,lambda=15)
install.packages('knitr', dependencies = TRUE)
library(knitr)
?knit
knit(input)
?knitr
library(knitr)
?knitr
?md
devtools::install_github("rstudio/rmarkdown")
library(devtools)
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
sudo tlmgr update --self
sudo tlmgr install framed
?t.test
t.test(1100,30)
qnorm(0.95, mean = 1100, sd = 30)
ppois?
?ppois
ppois(.95, -2)
ppois(.95, 2)
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
spsq
1100 + qt(p=.975,df=9-1)*c(-1,1)*(30/sqrt(9))
n_new = n_old = 100
med_avg_new= 4
med_avg_old = 6
med_var_new = .5^2
med_var_old = 2^2
med_avg_between = med_avg_new - med_avg_old
df = ((med_var_new / n_new + med_var_old / n_old)^2) /
((med_var_new/n_new)^2/(n_new-1) + (med_var_old/n_old)^2/(n_old-1))
t = qt(p=.975,df=df)
-med_avg_between + c(-1,1)*sqrt(med_var_new/n_new + med_var_old/n_old)*t
n_new = n_old = 9
med_avg_new= -3
med_avg_old = 1
med_var_new = 1.5^2
med_var_old = 1.8^2
t_confident_interval = .9
tp = (1-t_confident_interval)/2 + t_confident_interval
med_avg_between = med_avg_new - med_avg_old
df = ((med_var_new / n_new + med_var_old / n_old)^2) /
((med_var_new/n_new)^2/(n_new-1) + (med_var_old/n_old)^2/(n_old-1))
t = qt(p=tp,df=df)
med_avg_between + c(-1,1)*sqrt(med_var_new/n_new + med_var_old/n_old)*t
nosim <- 1000; n <- 40; lambda <- 0.2;
theoretical_mean <- 1/lambda
theoretical_sigma <- 1/lambda /sqrt(n)
lambda = 0.2
n = 40
nsims = 1:1000
set.seed(800)
## Theoretical values
theo_mean <- 1/lambda
theo_sigma <- 1/lambda /sqrt(n)
theo_mean
?hist
getwd(0)
getwd()
setwd("/Users/dame81/Desktop/DS_classes/Coursework/Statistical-Inference")
summary(ToothGrowth)
head(ToothGrowth)
hist(ToothGrowth)
hist(ToothGrowth$dose)
ToothGrowth
summary(ToothGrowth)
?qplot
?plot
?qplot
?ggplot
library(ggplot2)
?qplot
head(ToothGrowth)
df<- data.frame(ToothGrowth)
qplot(df$len,df$dose,xlab=len,ylab=dose)
qplot(df$len,df$dose,xlab="len",ylab="dose")
class(ToothGrowth)
head(ToothGrowth)
ggplot(df, aes(x=df$dose, y=df$len, colour=supp)) +
geom_point(alpha=.5, size=5) +
scale_size_area() +
scale_colour_brewer(palette="Set1") +
stat_smooth(method=lm) +
theme(legend.position=c(1,0), legend.justification=c(1,0))+
ggtitle("Tooth growth in relationship with lens and dose") +
facet_grid(.~supp)
ggplot(df aes(x=factor(dose), y=len, fill=supp)) +
geom_boxplot() +
theme(legend.position=c(1,0), legend.justification=c(1,0))+
ggtitle("Tooth Growth in relation to dose by supp")
df
ggplot(df aes(x=factor(df$dose), y=df$len, fill=df$supp)) +
geom_boxplot() +
theme(legend.position=c(1,0), legend.justification=c(1,0))+
ggtitle("Tooth Growth in relation to dose by supp")
ggplot(df,aes(x=factor(df$dose), y=df$len, fill=df$supp)) +
geom_boxplot() +
theme(legend.position=c(1,0), legend.justification=c(1,0))+
ggtitle("Tooth Growth in relation to dose by supp")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
group_by(dose, supp)
df<- data.frame(ToothGrowth)
group_by(df$dose, df$supp)
ToothGrowth %>%
group_by(dose, supp) %>%
plot <- ggplot(ToothGrowth,
aes(x=factor(dose),y=len,fill=factor(dose)))
plot + geom_boxplot(notch=F) + facet_grid(.~supp) +
scale_x_discrete("Dosage (Milligram)") +
scale_y_continuous("Length of Teeth") +
ggtitle("Exploratory Data Analyses")
plot <- ggplot(ToothGrowth,
aes(x=factor(dose),y=len,fill=factor(dose)))
plot + geom_boxplot(notch=F) + facet_grid(.~supp) +
scale_x_discrete("Dosage (Milligram)") +
scale_y_continuous("Length of Teeth") +
ggtitle("Exploratory Data Analyses")
